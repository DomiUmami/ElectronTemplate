<<<<<<< HEAD
'use strict';
const fs = require('fs');

let isDocker;
=======
import fs from 'node:fs';

let isDockerCached;
>>>>>>> de4d53c276c42b132f5ecc6af6fe57f59159636b

function hasDockerEnv() {
	try {
		fs.statSync('/.dockerenv');
		return true;
<<<<<<< HEAD
	} catch (_) {
=======
	} catch {
>>>>>>> de4d53c276c42b132f5ecc6af6fe57f59159636b
		return false;
	}
}

function hasDockerCGroup() {
	try {
		return fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');
<<<<<<< HEAD
	} catch (_) {
=======
	} catch {
>>>>>>> de4d53c276c42b132f5ecc6af6fe57f59159636b
		return false;
	}
}

<<<<<<< HEAD
module.exports = () => {
	if (isDocker === undefined) {
		isDocker = hasDockerEnv() || hasDockerCGroup();
	}

	return isDocker;
};
=======
export default function isDocker() {
	// TODO: Use `??=` when targeting Node.js 16.
	if (isDockerCached === undefined) {
		isDockerCached = hasDockerEnv() || hasDockerCGroup();
	}

	return isDockerCached;
}
>>>>>>> de4d53c276c42b132f5ecc6af6fe57f59159636b
